.nav-container {
  position: fixed;      /* Make it stay on top */
  top: 0;               /* Align to the top of the page */
  left: 0;
  right: 0;
  z-index: 1000;        /* Ensure it's above other content */
  display: flex;
  justify-content: center;
  gap: 1rem;
  padding: 1rem;
  margin-top: 60px;
}

.nav-button {
  text-decoration: none;
  color: #0b3d0b;
  padding: 0.5rem 1rem;
  font-weight: bold;
  border-radius: 8px;
  transition: background-color 0.3s, transform 0.3s;
  border: none;
  font-size: 1rem;
}

.nav-button:hover {
  background-color: #08b751;
  transform: scale(1.05);
  color: #fff;
  cursor: pointer;
}

.center-container {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
}

.outer-circle {
  position: relative;
  width: 300px;
  height: 300px;
  border-radius: 50%;
  background: #1a1f26;
  border: 8px solid #3a3f44;
  display: flex;
  justify-content: center;
  align-items: center;
  transition: transform 0.5s ease;
  box-shadow: 0 0 40px rgba(0, 255, 80, 0.4);
}

.inner-circle {
  position: relative;
  width: 180px;
  height: 180px;
  border-radius: 50%;
  background: #baff13;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  box-shadow: inset 0 0 25px rgba(0, 0, 0, 0.8),
              0 0 25px rgba(186, 255, 19, 0.8);
  transition: background-color 0.3s ease;
}

.inner-circle img {
  object-fit: contain;
  pointer-events: none;
}

.side-line {
  position: absolute;
  background: #6dfc4a;
  box-shadow: 0 0 15px #6dfc4a;
}
.side-line.top,
.side-line.bottom {
  width: 60px;
  height: 8px;
  left: 50%;
  transform: translateX(-50%);
}
.side-line.top { top: -4px; }
.side-line.bottom { bottom: -4px; }

.side-line.left,
.side-line.right {
  width: 8px;
  height: 60px;
  top: 50%;
  transform: translateY(-50%);
}
.side-line.left { left: -4px; }
.side-line.right { right: -4px; }

.overlay {
  animation: fadeInOut 2s forwards;
}

@keyframes fadeInOut {
  0% { opacity: 0; }
  30% { opacity: 0.8; }
  100% { opacity: 0; }
}

.classic-side-dot {
  position: absolute;
  width: 38px;
  height: 38px;
  background: #baff13;
  border: 6px solid #222;
  border-radius: 50%;
  z-index: 2;
}
/* .top    { left: 50%; top: -19px; transform: translateX(-50%); }
.bottom { left: 50%; bottom: -19px; transform: translateX(-50%); }
.left   { top: 50%; left: -19px; transform: translateY(-50%); }
.right  { top: 50%; right: -19px; transform: translateY(-50%); } */

.c-top {
  top: -20px;
  left: 50%;
  transform: translateX(-50%) rotate(0deg);
}

.c-bottom {
  bottom: -20px;
  left: 50%;
  transform: translateX(-50%) rotate(0deg);
}

.c-left {
  left: -20px;
  top: 50%;
  transform: translateY(-50%) rotate(85deg);
}

.c-right {
  right: -20px;
  top: 50%;
  transform: translateY(-50%) rotate(85deg);
}

.side-line {
  position: absolute;
  width: 12px;
  height: 60px;
  background: #888; /* grey */
  transform: rotate(45deg);
  clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%); /* Diamond shape */
  z-index: 2;
}

.top {
  top: -20px;
  left: 50%;
  transform: translateX(-50%) rotate(0deg);
}

.bottom {
  bottom: -20px;
  left: 50%;
  transform: translateX(-50%) rotate(0deg);
}

.left {
  left: 0px;
  top: 50%;
  transform: translateY(-50%) rotate(85deg);
}

.right {
  right: 0px;
  top: 50%;
  transform: translateY(-50%) rotate(85deg);
}


.overlay {
  position: fixed;       /* Fixed to cover entire screen */
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  z-index: 9999;         /* Make sure this is above all other elements */
  animation: fadeInOut 2s forwards;
  pointer-events: none;  /* Optional: let clicks pass through */
}

.overlay.green {
  background: #baff13;
}

.overlay.red {
  background: red;
}

/* Base ultimate fin - simple rectangle */
.ultimate-side-line {
  position: absolute;
  top: 50%;
  left: 50%;
  width: var(--length, 160px);
  height: var(--thickness, 40px);
  background: #1a1f26; /* base fill */
  transform-origin: left center;

  /* Step 1: rotate by direction (points line somewhere)
     Step 2: translate outward
     Step 3: twist in place */
  transform: rotate(var(--direction, 0deg)) translateX(var(--offset, 140px)) rotate(var(--twist, 0deg));

  border-radius: 12px;
  box-shadow: 0 0 15px #00ff00, 0 0 30px #00ff00;
}

/* Arms with custom values */
.u-top-left {
  --direction: -135deg;  /* main pointing direction */
  --twist: 0deg;        /* small tilt */
  --offset: 170px;
  --length: 160px;
  --thickness: 40px;
}

.u-top-right {
  --direction: -45deg;
  --twist: -2deg;
  --offset: 170px;
  --length: 165px;
  --thickness: 40px;
}

.u-bottom-right {
  --direction: 35deg;
  --twist: 6deg;
  --offset: 140px;
  --length: 160px;
  --thickness: 40px;
}

.u-bottom-left {
  --direction: 145deg;
  --twist: -10deg;
  --offset: 140px;
  --length: 160px;
  --thickness: 40px;
}

